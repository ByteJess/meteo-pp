{"_id":"tuple-stream","_rev":"11-43aadb84d55afdaddc7cbab35f243c38","name":"tuple-stream","description":"zip together two streams into a single stream with aligned pairwise data","dist-tags":{"latest":"0.0.2"},"versions":{"0.0.0":{"name":"tuple-stream","version":"0.0.0","description":"zip together two streams into a single stream with aligned pairwise data","main":"index.js","dependencies":{"through":"~2.3.4"},"devDependencies":{"tape":"~1.0.4","concat-stream":"~1.0.0","split":"~0.2.5"},"scripts":{"test":"tap test/*.js"},"testling":{"files":"test/*.js","browsers":{"ie":[6,7,8,9],"ff":[3.5,10,15],"chrome":[10,22],"safari":[5.1],"opera":[12]}},"repository":{"type":"git","url":"git://github.com/substack/tuple-stream.git"},"homepage":"https://github.com/substack/tuple-stream","keywords":["pair","pairwise","zip","stream"],"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"license":"MIT","readme":"# tuple-stream\n\nzip together two streams into a single stream with aligned pairwise data\n\n[![browser support](https://ci.testling.com/substack/tuple-stream.png)](http://ci.testling.com/substack/tuple-stream)\n\n[![build status](https://secure.travis-ci.org/substack/tuple-stream.png)](http://travis-ci.org/substack/tuple-stream)\n\n# example\n\nThis is easy to understand with lines:\n\n``` js\nvar split = require('split');\nvar through = require('through');\nvar tuple = require('../');\n\nvar a = split(), b = split();\n\ntuple(a, b).pipe(through(function (pair) {\n    this.queue(pair[0] + ' | ' + pair[1] + '\\n');\n})).pipe(process.stdout);\n\na.end('one\\ntwo\\nhree\\n4\\nfive');\nb.end('one\\ntwo\\nthree\\nfour\\n');\n```\n\noutput:\n\n```\none | one\ntwo | two\nhree | three\n4 | four\nfive | \n```\n\nHere the `split` module chunks up its input by newlines, sending a separate\nchunk for each line. The `tuple` module kicks in and aligns the events by order\nsuch that the first event from `a` is paired with the first event from `b` and\nso on.\n\n# methods\n\n\n``` js\nvar tuple = require('tuple-stream')\n```\n\n## tuple(a, b)\n\nReturn a readable stream that zips together the data from readable streams `a`\nand `b` into an array data chunk with `[achunk,bchunk]`.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install tuple-stream\n```\n\n# license\n\nMIT\n","readmeFilename":"readme.markdown","_id":"tuple-stream@0.0.0","dist":{"shasum":"06073ad1c8d0d108efc47dd6b35a093a1bcc9fe7","tarball":"https://registry.npmjs.org/tuple-stream/-/tuple-stream-0.0.0.tgz","integrity":"sha512-CTmcXLl8WWsEI7fV5puzH7OVuRynNfc1gAH0wZ2d7b+WAAvE0bt43b2k2KTuk0V8aMQ3CMBrCUQWHquTe/FAyA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQClK4IIj1PuTksNL9i38An9xj++oK4eLi292bsasIZSVAIhAL0DkFaabgN7lrGtkXI7UdqdB3To8j1PtIZAqDngWOQB"}]},"_npmVersion":"1.1.71","_npmUser":{"name":"substack","email":"mail@substack.net"},"maintainers":[{"name":"substack","email":"mail@substack.net"}],"directories":{}},"0.0.1":{"name":"tuple-stream","version":"0.0.1","description":"zip together two streams into a single stream with aligned pairwise data","main":"index.js","dependencies":{"through":"~2.3.4"},"devDependencies":{"tape":"~1.0.4","concat-stream":"~1.0.0","split":"~0.2.5"},"scripts":{"test":"tap test/*.js"},"testling":{"files":"test/*.js","browsers":{"ie":[6,7,8,9],"ff":[3.5,10,15],"chrome":[10,22],"safari":[5.1],"opera":[12]}},"repository":{"type":"git","url":"git://github.com/substack/tuple-stream.git"},"homepage":"https://github.com/substack/tuple-stream","keywords":["pair","pairwise","zip","stream"],"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"license":"MIT","readme":"# tuple-stream\n\nzip together two streams into a single stream with aligned pairwise data\n\n[![browser support](https://ci.testling.com/substack/tuple-stream.png)](http://ci.testling.com/substack/tuple-stream)\n\n[![build status](https://secure.travis-ci.org/substack/tuple-stream.png)](http://travis-ci.org/substack/tuple-stream)\n\n# example\n\nThis is easy to understand with lines:\n\n``` js\nvar split = require('split');\nvar through = require('through');\nvar tuple = require('../');\n\nvar a = split(), b = split();\n\ntuple(a, b).pipe(through(function (pair) {\n    this.queue(pair[0] + ' | ' + pair[1] + '\\n');\n})).pipe(process.stdout);\n\na.end('one\\ntwo\\nhree\\n4\\nfive');\nb.end('one\\ntwo\\nthree\\nfour\\n');\n```\n\noutput:\n\n```\none | one\ntwo | two\nhree | three\n4 | four\nfive | \n```\n\nHere the `split` module chunks up its input by newlines, sending a separate\nchunk for each line. The `tuple` module kicks in and aligns the events by order\nsuch that the first event from `a` is paired with the first event from `b` and\nso on.\n\n# methods\n\n\n``` js\nvar tuple = require('tuple-stream')\n```\n\n## tuple(a, b)\n\nReturn a readable stream that zips together the data from readable streams `a`\nand `b` into an array data chunk with `[achunk,bchunk]`.\n\nWhen a stream is finished but its partner isn't, it will emit `null` data.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install tuple-stream\n```\n\n# license\n\nMIT\n","readmeFilename":"readme.markdown","_id":"tuple-stream@0.0.1","dist":{"shasum":"5f2271074191ad2c11886671628deb2e839edd81","tarball":"https://registry.npmjs.org/tuple-stream/-/tuple-stream-0.0.1.tgz","integrity":"sha512-/77a2ZLdhTD3zGth94NnOYE8kR5ROoGn4TJAofmr/X5czIhLiZPyPDov9WTI/Gm9G9ZsooSIYmzkwWX7BS7/qw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDqqnMFhP9S6OK95Law0egedLBCLnOjRbXKhDK4/ffmmgIhAOxLwFWO5AbPDCNrXfmBcG6xD8q0kzE2AYvdz0fDckkd"}]},"_npmVersion":"1.1.71","_npmUser":{"name":"substack","email":"mail@substack.net"},"maintainers":[{"name":"substack","email":"mail@substack.net"}],"directories":{}},"0.0.2":{"name":"tuple-stream","version":"0.0.2","description":"zip together two streams into a single stream with aligned pairwise data","main":"index.js","dependencies":{"through":"~2.3.4"},"devDependencies":{"tape":"~1.0.4","concat-stream":"~1.0.0","split":"~0.2.5"},"scripts":{"test":"tap test/*.js"},"testling":{"files":"test/*.js","browsers":{"ie":[6,7,8,9],"ff":[3.5,10,15],"chrome":[10,22],"safari":[5.1],"opera":[12]}},"repository":{"type":"git","url":"git://github.com/substack/tuple-stream.git"},"homepage":"https://github.com/substack/tuple-stream","keywords":["pair","pairwise","zip","stream"],"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"license":"MIT","readme":"# tuple-stream\n\nzip together two streams into a single stream with aligned pairwise data\n\n[![browser support](https://ci.testling.com/substack/tuple-stream.png)](http://ci.testling.com/substack/tuple-stream)\n\n[![build status](https://secure.travis-ci.org/substack/tuple-stream.png)](http://travis-ci.org/substack/tuple-stream)\n\n# example\n\nThis is easy to understand with lines:\n\n``` js\nvar split = require('split');\nvar through = require('through');\nvar tuple = require('../');\n\nvar a = split(), b = split();\n\ntuple(a, b).pipe(through(function (pair) {\n    this.queue(pair[0] + ' | ' + pair[1] + '\\n');\n})).pipe(process.stdout);\n\na.end('one\\ntwo\\nhree\\n4\\nfive');\nb.end('one\\ntwo\\nthree\\nfour\\n');\n```\n\noutput:\n\n```\none | one\ntwo | two\nhree | three\n4 | four\nfive | \n```\n\nHere the `split` module chunks up its input by newlines, sending a separate\nchunk for each line. The `tuple` module kicks in and aligns the events by order\nsuch that the first event from `a` is paired with the first event from `b` and\nso on.\n\n# methods\n\n\n``` js\nvar tuple = require('tuple-stream')\n```\n\n## tuple(a, b)\n\nReturn a readable stream that zips together the data from readable streams `a`\nand `b` into an array data chunk with `[achunk,bchunk]`.\n\nWhen a stream is finished but its partner isn't, it will emit `null` data.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install tuple-stream\n```\n\n# license\n\nMIT\n","readmeFilename":"readme.markdown","_id":"tuple-stream@0.0.2","dist":{"shasum":"f91f6fb1bafde1ebd797cf6003378ebc3870b933","tarball":"https://registry.npmjs.org/tuple-stream/-/tuple-stream-0.0.2.tgz","integrity":"sha512-RLg676gaO9qAOLoamGLgSRgX2jU0IuyvTw5wIJGi3CowTJeSd5KFOZUmW5cuB3f7YSeuyiVKQ3v6bXby51YyuQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDV9gFLwtaxR5KpAnBLoHttI2ncUJIxxvqFAhF5u0atlAIhAI8q61gTdFR+Qi8nqrph+4cORMoaa7VqnDVKPjKNpnOn"}]},"_npmVersion":"1.1.71","_npmUser":{"name":"substack","email":"mail@substack.net"},"maintainers":[{"name":"substack","email":"mail@substack.net"}],"directories":{}}},"readme":"# tuple-stream\n\nzip together two streams into a single stream with aligned pairwise data\n\n[![browser support](https://ci.testling.com/substack/tuple-stream.png)](http://ci.testling.com/substack/tuple-stream)\n\n[![build status](https://secure.travis-ci.org/substack/tuple-stream.png)](http://travis-ci.org/substack/tuple-stream)\n\n# example\n\nThis is easy to understand with lines:\n\n``` js\nvar split = require('split');\nvar through = require('through');\nvar tuple = require('../');\n\nvar a = split(), b = split();\n\ntuple(a, b).pipe(through(function (pair) {\n    this.queue(pair[0] + ' | ' + pair[1] + '\\n');\n})).pipe(process.stdout);\n\na.end('one\\ntwo\\nhree\\n4\\nfive');\nb.end('one\\ntwo\\nthree\\nfour\\n');\n```\n\noutput:\n\n```\none | one\ntwo | two\nhree | three\n4 | four\nfive | \n```\n\nHere the `split` module chunks up its input by newlines, sending a separate\nchunk for each line. The `tuple` module kicks in and aligns the events by order\nsuch that the first event from `a` is paired with the first event from `b` and\nso on.\n\n# methods\n\n\n``` js\nvar tuple = require('tuple-stream')\n```\n\n## tuple(a, b)\n\nReturn a readable stream that zips together the data from readable streams `a`\nand `b` into an array data chunk with `[achunk,bchunk]`.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install tuple-stream\n```\n\n# license\n\nMIT\n","maintainers":[{"email":"nopersonsmodules@gmail.com","name":"nopersonsmodules"}],"time":{"modified":"2022-11-08T10:41:25.583Z","created":"2013-06-12T00:19:01.083Z","0.0.0":"2013-06-12T00:19:03.483Z","0.0.1":"2013-06-12T00:44:23.881Z","0.0.2":"2013-06-12T01:18:50.987Z"},"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"repository":{"type":"git","url":"git://github.com/substack/tuple-stream.git"}}